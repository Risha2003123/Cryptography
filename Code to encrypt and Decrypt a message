def indexOf(letter,matrix): 
for i in range (5): 
try:
 index = matrix[i].index(letter) 
return (i,index) 
except: 
continue 
#Implementation of the playfair cipher 
#If encrypt=True the method will encrypt the message 
# otherwise the method will decrypt 
def playfair(key, message, encrypt=True): 
inc = 1 
if encrypt==False: 
inc = -1 
matrix = create_matrix(key) 
message = message.upper() 
message = message.replace(' ','') 
message = separate_same_letters(message) 
cipher_text=' ' 
for (l1, l2) in zip(message[0::2], message[1::2]): 
row1,col1 = indexOf(l1,matrix) 
row2,col2 = indexOf(l2,matrix) 
if row1==row2: #Rule 2, the letters are in the same row 
cipher_text += matrix[row1][(col1+inc)%5] + matrix[row2][(col2+inc)%5] 
elif col1==col2:# Rule 3, the letters are in the same column 
	cipher_text += matrix[(row1+inc)%5][col1] + matrix[(row2+inc)%5][col2] 
else: #Rule 4, the letters are in a different row and column 
cipher_text += matrix[row1][col2] + matrix[row2][col1] 
return cipher_text 
if __name__=='__main__': 
# a sample of encryption and decryption 
print ('Encripting') 
print ( playfair('secret', 'my secret message')) 
print ('Decrypting') 
print ( playfair('secret', 'LZECRTCSITCVAHBT', False))
